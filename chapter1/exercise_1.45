(import (chibi))
(define tolerance 0.00001)
(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (let ((next (f guess)))
      (display "Guess: ")
      (display next)
      (newline)
      (if (close-enough? guess next )
        next
        (try next))))
  (try first-guess)
)
(define (repeated f n)
  (define (compose f g)
    (lambda (x) (f (g x)))
  )
  (lambda (x) 
    (if (< n 1)
      x
      ((compose f (repeated f (- n 1))) x)
    )
  )
)
(define (power a b)
  (if (< b 1)
    1
    (* a (power a (- b 1)))
  )
)
(define (root x n)
  (define (average-damp f)
    (lambda (y) (/ (+ y (f y)) 2))
  )
  (fixed-point ((repeated average-damp (- n 1)) (lambda (y) (/ x (power y (- n 1)))) ) 1.0)
)
(display (root 4 2))
