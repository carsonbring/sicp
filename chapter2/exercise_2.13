(import (chibi))
(define (make-interval a b) (cons a b))
(define (lowerbound x ) (min (cdr x) (car x)))
(define (upperbound x ) (max (cdr x) (car x)))
(define (make-center-percent center percent)
  (cons (- center (* center (/ percent 100))) (+ center (* center (/ percent 100))))
)
(define (center i)  
  (/ (+ (lowerbound i) (upperbound i)) 2)
)
(define (percent i)
  (/ (- (upperbound i) (center i)) (center i) )
)
(define (mul-interval x y) 
  (let ((p1 (* (lowerbound x) (lowerbound y)))
        (p2 (* (lowerbound x) (upperbound y)))
        (p3 (* (upperbound x) (lowerbound y)))
        (p4 (* (upperbound x) (upperbound y)))
        )
    (make-interval (min p1 p2 p3 p4) (max p1 p2 p3 p4))
  )
)

(define (print-cp-int a)
  (newline)
  (display (center a))
  (display " +/- ")
  (display (* (percent a) 100))
  (display "%")
  (newline)
)
(define (simple-mul-interval x y)
  (make-center-percent (* (center x) (center y)) (+ (percent x) (percent y)))
)
(let ((int1 (make-center-percent 9.2 9)) (int2 (make-center-percent 3.2 3)))
  (display (print-cp-int (mul-interval int1 int2)))
  (display (print-cp-int (simple-mul-interval int1 int2)))
)
