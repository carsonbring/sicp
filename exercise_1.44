(import (chibi))
(define (compose f g)
  (lambda (x) (f (g x)))
)
(define (repeated f n)
  (lambda (x) 
    (if (< n 1)
      x
      ((compose f (repeated f (- n 1))) x)
    )
  )
)

(define (smooth f)
  (let ((dx .0001))
    (lambda (x) ( / (+ (f (- x dx)) (f x) (f (+ x dx))) 3))
  )
)
(define (square x) (* x x))
(display (((repeated smooth 10) square) 5))
