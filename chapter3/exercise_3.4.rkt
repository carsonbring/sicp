;2024-07-12
#lang sicp


(define (make-account balance secret-password)
  (let ((num-attempts 0))
    (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (call-the-cops)
    (display "THE COPS ARE ON THE WAY. HIDE WHILE YOU CAN. "))
  (define (wrong-pass)
    (if (< num-attempts 7)
        (set! num-attempts (+ num-attempts 1))
        (call-the-cops)))
  (define (dispatch pass m)
    (if (eq? secret-password pass)
        (begin
          (set! num-attempts 0)
          (cond ((eq? m 'withdraw) withdraw)
                ((eq? m 'deposit) deposit)
                (else (error "Unknown request -- MAKE-ACCOUNT"
                             m))))
        (begin (wrong-pass) (display "Incorrect Password") (lambda (x) ""))))
  dispatch))


(define bank (make-account 100 'thuck))

(display ((bank 'thuck 'deposit) 10))
(newline)
(display ((bank 'funny 'withdraw) 10))
(newline)
(display ((bank 'thuck 'withdraw) 10))
(newline)
(display ((bank 'funny 'withdraw) 10))
(newline)
(display ((bank 'funny 'withdraw) 10))
(newline)
(display ((bank 'funny 'withdraw) 10))
(newline)
(display ((bank 'funny 'withdraw) 10))
(newline)
(display ((bank 'funny 'withdraw) 10))
(newline)
(display ((bank 'funny 'withdraw) 10))
(newline)
(display ((bank 'funny 'withdraw) 10))
(newline)
(display ((bank 'funny 'withdraw) 10))
(newline)
(display ((bank 'funny 'withdraw) 10))
(newline)
