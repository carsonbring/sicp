(import (chibi))

(define (accumulate op initial sequence)
  (if (null? sequence) initial (op (car sequence) (accumulate op initial (cdr sequence))))
)

(define (map p sequence)
  (accumulate (lambda (x y) (cons (p x) y)) '() sequence)  
)
(define (append seq1 seq2)
  (accumulate cons seq1 seq2)
)
(define (length sequence)
  (accumulate (lambda (x y) (+ 1 y)) 0 sequence)
)
(define (square x) (* x x))
(display (map square (list 1 2 3)))
(newline)

(newline)
(display (append (list 1 3) (list 2 4)))
(newline)
(newline)
(display (length (list 1 2 3 4 5)))
