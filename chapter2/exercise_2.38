; 06/15/24
(import (chibi))
(define (fold-left op initial sequence)
  (define (iter result rest)
    (if (null? rest)
      result
      (iter (op result (car rest)) (cdr rest))
     )
   )
  (iter initial sequence)
 )

(define (fold-right op initial sequence)
  (if (null? sequence) initial  (op (car sequence) (fold-right op initial (cdr sequence))))
 )

(let ((l (list 1 2 3)))
  (newline)
  (display "fold right divide")
  (newline)
  (display (fold-right / 1 l))
  (newline)
  (display "fold left divide")
  (newline)
  (display (fold-left / 1 l))
  (newline)
  (display "make a list fold right ")
  (newline)
  (display (fold-right list '() l))
  (newline)
  (display "make a list fold left")
  (newline)
  (display (fold-left list '() l))
)
