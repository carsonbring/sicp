(import (chibi))
(define (sum term a next b)
 (if (> a b)
    0
    (+ (term a)
      (sum term (next a) next b))
  )
 )

(define (integral f a b dx)
  (define (add-dx x) (+ x dx))
  (* dx (sum f (+ a (/ dx 2.0)) add-dx b))
)
(define (simpson f a b n)
  (define h 
    (/ (- b a) n )
  )
  (define (iseven? x)
   (= (modulo x 2) 0)
   )
  (define (coefficient k)
    (cond ((= k 0 ) 1)
     ((= k n ) 1)
     ((iseven? k) 2)
     (else 4)
    )
   )
  (define (simp-term k)
   (* (coefficient k ) (f (+ a (* k h) )))
   )
  (* (/ h 3) (sum simp-term 0 (lambda (k) (+ k 1)) n))
)
  
(define (cube x)
 (* x x x)
)
(display (simpson cube 0 1 100) )
